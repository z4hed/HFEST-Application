<?php
include 'ConnectToDB.php'
?>

<?php
$tablename = 'facility';
$query = 'SHOW COLUMNS FROM '. $tablename; 
$column_names = mysqli_query($conn, $query);
echo "<table class =\"table\">";
echo "<tr>";

while($row = mysqli_fetch_assoc($column_names)) {
    echo '<th>' . $row['Field'] . '</th>';
}

echo '<th> Delete </th>';


 $query = 'SELECT * FROM '. $tablename;
 $table_data = mysqli_query($conn, $query);
 while ($row = mysqli_fetch_assoc($table_data)) {
    echo "<tr>";
    foreach ($row as $value) {
        echo "<td>" . $value . "</td>";
    }

    echo "<td> <button type ='submit' name ='delete' value =''> Delete </button> </td>";
    echo "</tr>";
}
echo "</table>";

// Display employee details for a specific facility:

// $facility_id = 1; // Replace this with the specific facility ID you want to fetch employees for

// $stmt = $conn->prepare("SELECT employee.*, workHistory.start_date FROM employee JOIN workHistory ON employee.ID = workHistory.employee_ID WHERE workHistory.facility_ID = ? AND workHistory.end_date IS NULL ORDER BY employee.role ASC, employee.first_name ASC, employee.last_name ASC");
// $stmt->bind_param("i", $facility_id);
// $stmt->execute();
// $result = $stmt->get_result();

// if ($result->num_rows > 0) {
//     echo "<table>";
//     echo "<tr><th>First Name</th><th>Last Name</th><th>Start Date</th><th>Date of Birth</th><th>Medicare</th><th>Phone</th><th>Address</th><th>City</th><th>Province</th><th>Postal Code</th><th>Citizenship</th><th>Email</th></tr>";
//     while ($row = $result->fetch_assoc()) {
//         echo "<tr><td>" . htmlspecialchars($row["first_name"]) . "</td><td>" . htmlspecialchars($row["last_name"]) . "</td><td>" . htmlspecialchars($row["start_date"]) . "</td><td>" . htmlspecialchars($row["date_of_birth"]) . "</td><td>" . htmlspecialchars($row["medicare"]) . "</td><td>" . htmlspecialchars($row["phone"]) . "</td><td>" . htmlspecialchars($row["address"]) . "</td><td>" . htmlspecialchars($row["city"]) . "</td><td>" . htmlspecialchars($row["province"]) . "</td><td>" . htmlspecialchars($row["postal_code"]) . "</td><td>" . htmlspecialchars($row["citizenship"]) . "</td><td>" . htmlspecialchars($row["email"]) . "</td></tr>";
//     }
//     echo "</table>";
// } else {
//     echo "0 results";
// }

// List the emails generated by a given facility. The results should be displayed in ascending order by the date of the emails.

// Replace this with the actual facility ID you want to query for
// $facility_id = 1;

// // Prepare and execute the query
// $stmt = $conn->prepare("SELECT employee.email, workHistory.start_date FROM employee INNER JOIN workHistory ON employee.ID = workHistory.employee_id WHERE workHistory.facility_id = ? AND workHistory.end_date IS NULL ORDER BY workHistory.start_date ASC");
// $stmt->bind_param("i", $facility_id);
// $stmt->execute();
// $result = $stmt->get_result();

// // Display the emails
// if ($result->num_rows > 0) {
//     echo "<table><tr><th>Email</th><th>Start Date</th></tr>";
//     while ($row = $result->fetch_assoc()) {
//         echo "<tr><td>" . $row["email"] . "</td><td>" . $row["start_date"] . "</td></tr>";
//     }
//     echo "</table>";
// } else {
//     echo "No emails found for the given facility.";
// }

// $stmt->close();
// $conn->close();

// For a given facility, generate a list of all the doctors and nurses who have been on schedule to work in the last two weeks. The list should include first-name, last-name, and role. Results should be displayed in ascending order by role, then by first name.

// // Replace this with the actual facility ID you want to query for
// $facility_id = 1;

// // Calculate the start date (two weeks ago from today)
// $two_weeks_ago = date('Y-m-d', strtotime('-2 weeks'));

// // Prepare and execute the query
// $stmt = $conn->prepare("SELECT employee.first_name, employee.last_name, employee.role FROM employee INNER JOIN workHistory ON employee.ID = workHistory.employee_id WHERE workHistory.facility_id = ? AND workHistory.start_date <= ? AND (workHistory.end_date >= ? OR workHistory.end_date IS NULL) AND (employee.role = 'Doctor' OR employee.role = 'Nurse') ORDER BY employee.role ASC, employee.first_name ASC");
// $stmt->bind_param("iss", $facility_id, $two_weeks_ago, $two_weeks_ago);
// $stmt->execute();
// $result = $stmt->get_result();

// // Display the result
// if ($result->num_rows > 0) {
//     echo "<table><tr><th>First Name</th><th>Last Name</th><th>Role</th></tr>";
//     while ($row = $result->fetch_assoc()) {
//         echo "<tr><td>" . $row["first_name"] . "</td><td>" . $row["last_name"] . "</td><td>" . $row["role"] . "</td></tr>";
//     }
//     echo "</table>";
// } else {
//     echo "No doctors or nurses found for the given facility within the last two weeks.";
// }

// $stmt->close();
// $conn->close();

?>
